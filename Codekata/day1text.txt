MERN developer

Javascript:JS

Logic building:

4=> Mathmatical 
4+0
2+2
1+3
2*2
8/2
2^2
5+1
10-6

Logic building:

Input output

code optimization

Javascript=> logical


extensions: to save the file "filename.js"


declare the variable:

var variablename

var a
var poonam
var khusi
var karunay
var dhanush

let
const

pythontutor:

https://pythontutor.com/javascript.html#mode=edit

datatypes:
1.Number
var a=50
var b =60
typeof(a)

2.String
""
var b="guvi course"

3.BOOLEAN

Operators:
+
-
*
**Exponential(Power of)
/Division(Quotient)
%Modulus(Remainder)
++
--
=

Comparsion Operators
 
== 
===
!=


Logical Operators:
&&(AND)
||(OR)
!()NOT


And 

=50
<60
Print=> 1
else=>0

var a=10
if(a==50 || a>60 || a>100){
  console.log(1)
  }
else{
    console.log(0)
    }


And
var a=50
if(a==50 && a>60 && a>100){
  console.log(1)
  }
else{
    console.log(0)
    }

OR
var a=50
if(a==50 || a>60 || a>100){
  console.log(1)
  }
else{
    console.log(0)
    }

!=
var a=50
if(a!=60){
  console.log(1)
  }
else{
    console.log(0)
    }


if(condition=true){
    //block of code
}

------
if(condition=true){
    //block of code
}else{
    //block of code
}

-------
if(condition=true){
    //block of code=>1
}else if(condition=true){
    //block of code=>2
}else{
    //block of code=>0
}


it is one of datatypes
arrays:
[]
collection/combination of hetrogenous datatypes
[String,Number,boolean]
var arr=["hi",23,true]
length=> 3 
index=>0
start index=> 0 and ends at length-1(n-1)

var arr=["hi",23,true]

arr[0]
'hi'
arr[1]
23
arr[2]
true


for loop:
for(initialization,condition,increment/decrement){
    //block of code
}

print 0 to 10

for(var i=0;i<11;i++){
    console.log(i)
}

:i=0,true(0),i=1
:i=1,true(1),i=2
:i=2,true(2),i=3
:i=3,true(3),i=4
..
..
..
..
:i=9,true(9),i=10
:i=10,true(10),i=11
:i=11,false=>terminate
come out of the loop
0
1
2
3
4
5
6
7
8
9
10
Print the table 2 
2
4
6
8
10
12
14
16
18
20

//num*i=> 
var num=2
for(var i=1;i<=10;i++){
    console.log(num+"*"+i+ "="+num*i)
}


var num=2
for(var i=2;i<=20;i+=2){
    console.log(num+"*"+i+ "="+i)
}








